terraform {
  required_version = ">= 1.0.0"
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~> 3.0"
    }
  }
}

provider "azurerm" {
  features {}
}

# Variables (customize these)
variable "location" {
  default = "eastus"
}

variable "project_name" {
  default = "gtm2"
}

# 1. Create Resource Groups
resource "azurerm_resource_group" "prod" {
  name     = "${var.project_name}-prod-rg"
  location = var.location
}

resource "azurerm_resource_group" "sandbox" {
  name     = "${var.project_name}-sandbox-rg"
  location = var.location
}

# 2. Data Lake Storage Gen2 (for Log Analytics)
resource "azurerm_storage_account" "datalake" {
  name                     = "${var.project_name}datalakeprod"
  resource_group_name      = azurerm_resource_group.prod.name
  location                 = var.location
  account_tier             = "Standard"
  account_replication_type = "LRS"
  account_kind             = "StorageV2"
  is_hns_enabled           = true # Enables Data Lake Gen2

  lifecycle {
    prevent_destroy = true # Avoid accidental deletion
  }
}

# 3. Log Analytics Workspace
resource "azurerm_log_analytics_workspace" "gtm_logs" {
  name                = "${var.project_name}-logs-prod"
  resource_group_name = azurerm_resource_group.prod.name
  location            = var.location
  sku                 = "PerGB2018"
  retention_in_days   = 365
}

# 4. RBAC Assignments (Example: Assign "Contributor" to a user/group)
data "azurerm_client_config" "current" {} # Gets current Azure CLI context

resource "azurerm_role_assignment" "contributor_prod" {
  scope                = azurerm_resource_group.prod.id
  role_definition_name = "Contributor"
  principal_id         = data.azurerm_client_config.current.object_id # Replace with your user/group ID
}

# Outputs (for reference)
output "datalake_name" {
  value = azurerm_storage_account.datalake.name
}

output "log_analytics_id" {
  value = azurerm_log_analytics_workspace.gtm_logs.workspace_id
}






# ... (Previous Terraform code remains until RBAC section) ...

# --- NETWORKING MODULE ---

# 1. Hub VNET (Shared services)
resource "azurerm_virtual_network" "hub" {
  name                = "${var.project_name}-hub-vnet"
  resource_group_name = azurerm_resource_group.prod.name  # Hub in Prod RG
  location            = var.location
  address_space       = ["10.0.0.0/16"]
}

# 2. Spoke VNETs (Prod & Sandbox)
resource "azurerm_virtual_network" "prod_spoke" {
  name                = "${var.project_name}-prod-spoke-vnet"
  resource_group_name = azurerm_resource_group.prod.name
  location            = var.location
  address_space       = ["10.1.0.0/16"]
}

resource "azurerm_virtual_network" "sandbox_spoke" {
  name                = "${var.project_name}-sandbox-spoke-vnet"
  resource_group_name = azurerm_resource_group.sandbox.name
  location            = var.location
  address_space       = ["10.2.0.0/16"]
}

# 3. VNET Peerings (Hub <-> Spokes)
resource "azurerm_virtual_network_peering" "hub_to_prod" {
  name                      = "hub-to-prod"
  resource_group_name       = azurerm_resource_group.prod.name
  virtual_network_name      = azurerm_virtual_network.hub.name
  remote_virtual_network_id = azurerm_virtual_network.prod_spoke.id
}

resource "azurerm_virtual_network_peering" "prod_to_hub" {
  name                      = "prod-to-hub"
  resource_group_name       = azurerm_resource_group.prod.name
  virtual_network_name      = azurerm_virtual_network.prod_spoke.name
  remote_virtual_network_id = azurerm_virtual_network.hub.id
}

# 4. Subnets (Example: Prod Spoke)
resource "azurerm_subnet" "prod_default" {
  name                 = "default"
  resource_group_name  = azurerm_resource_group.prod.name
  virtual_network_name = azurerm_virtual_network.prod_spoke.name
  address_prefixes     = ["10.1.1.0/24"]
}

# 5. NSG (Restrict traffic between tiers)
resource "azurerm_network_security_group" "prod_nsg" {
  name                = "${var.project_name}-prod-nsg"
  resource_group_name = azurerm_resource_group.prod.name
  location            = var.location

  security_rule {
    name                       = "AllowInternal"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "*"
    source_port_range          = "*"
    destination_port_range     = "*"
    source_address_prefix      = "10.0.0.0/8"  # Allow internal Azure traffic
    destination_address_prefix = "*"
  }
}

# 6. Private Endpoint for Data Lake (Secure access)
resource "azurerm_private_endpoint" "datalake_private" {
  name                = "${var.project_name}-datalake-private"
  resource_group_name = azurerm_resource_group.prod.name
  location            = var.location
  subnet_id           = azurerm_subnet.prod_default.id

  private_service_connection {
    name                           = "datalake-privateservice"
    private_connection_resource_id = azurerm_storage_account.datalake.id
    is_manual_connection           = false
    subresource_names              = ["blob"]
  }
}

# --- OUTPUTS ---
output "hub_vnet_id" {
  value = azurerm_virtual_network.hub.id
}

output "prod_spoke_subnet_id" {
  value = azurerm_subnet.prod_default.id
}
